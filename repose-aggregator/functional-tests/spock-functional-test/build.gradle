apply from: "$rootDir/gradle/baseProject.gradle"


configurations {
    filterBundles{
        transitive = false
    }
    tomcat {
        transitive = false
    }
    glassfish {
        transitive = false
    }
    valve {
        transitive = false
    }

}

dependencies {

    filterBundles project(path: ":repose-aggregator:components:filters:filter-bundle", configuration: "earFile"),
            project(path: ":repose-aggregator:experimental:experimental-filter-bundle", configuration: "earFile"),
            project(path: ":repose-aggregator:extensions:extensions-filter-bundle", configuration: "earFile")

    tomcat project(path: ":repose-aggregator:functional-tests:tomcat-support", configuration: "shadow")

    glassfish project(path: ":repose-aggregator:functional-tests:glassfish-support", configuration: "shadow")

    valve project(path: ":repose-aggregator:core:valve", configuration: "shadow")

    compile project(":repose-aggregator:functional-tests:mocks-util"),
            project(":repose-aggregator:functional-tests:mocks-servlet"),
            project(":repose-aggregator:commons:utilities"),
            project(":repose-aggregator:core:core-lib"),
            project(":repose-aggregator:commons:configuration"),
            project(":repose-aggregator:services:datastore:api"),
            "org.glassfish.main.extras:glassfish-embedded-all:3.1.2.2",
            "org.codehaus.jackson:jackson-core-lgpl:1.9.13",
            "joda-time:joda-time:2.2",
            "org.eclipse.jetty:jetty-server:$jettyVersion",
            "commons-lang:commons-lang:2.6",
            "commons-io:commons-io:2.4",
            "org.linkedin:org.linkedin.util-groovy:1.8.0",
            "org.apache.httpcomponents:httpclient:4.2.5",
            "org.rackspace:deproxy:0.21",
            "xerces:xerces-xsd11:2.12.0-rax",
            "commons-codec:commons-codec:1.8"
}

test.enabled = false

task("test", overwrite: true) {
    doLast {
        println("I AM THE LIZARD KING")
    }
}

["filterBundles", "tomcat", "glassfish", "valve"].collect { config ->
    task("copy$config", type:Copy) {
        from configurations."$config"
        into "build/artifacts/$config"
    }
}

